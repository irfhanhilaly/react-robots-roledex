{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/searchbox.componet.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","email","CardList","robots","map","SearchBox","type","placeholder","onChange","handleClick","App","e","setState","searchText","target","value","state","fetch","then","respose","json","uarray","this","filteredRobots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAEaA,G,kBAAO,SAACC,GACjB,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACtB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,aCHXC,EAAW,SAACR,GACzB,OAAQ,qBAAKC,UAAU,YAAf,SAEED,EAAMS,OAAOC,KAAI,SAAAN,GAAK,OAAI,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,UCJxCM,G,MAAY,SAACX,GACtB,OACI,uBAAOY,KAAK,SAASC,YAAY,gBAC7BC,SAAUd,EAAMe,gBCgCbC,E,kDA9Bb,aAAe,IAAD,8BACZ,gBAWFD,YAAc,SAACE,GACb,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAXrC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,WAAY,IAJF,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAAM,OAAI,EAAKT,SAAS,CAAET,OAAQkB,S,+BAKlC,IAAD,EACwBC,KAAKN,MAA5Bb,EADD,EACCA,OAAQU,EADT,EACSA,WACVU,EAAiBpB,EAAOqB,QAAO,SAAA1B,GAAK,OAAIA,EAAME,KAAKyB,cAAcC,SAASb,EAAWY,kBAC3F,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAWc,YAAaa,KAAKb,cAC7B,cAAC,EAAD,CAAUN,OAAQoB,W,GAvBRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.152515be.chunk.js","sourcesContent":["import './card.styles.css';\n\nexport const Card = (props) => {\n    return (<div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.robot.id}?set=set1&size=180x180`} />\n        <h2>{props.robot.name}</h2>\n        <p>{props.robot.email}</p>\n    </div>)\n}","import './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\nreturn (<div className=\"card-list\">\n          {\n          props.robots.map(robot => <Card key={robot.id} robot={robot}/>)\n        }\n    </div>)\n}","import './search-box.styles.css';\n\nexport const SearchBox = (props) => {\n    return (\n        <input type=\"search\" placeholder=\"Search Robots\"\n            onChange={props.handleClick}\n        />)\n}","import './App.css';\nimport { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/searchbox.componet';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchText: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(respose => respose.json())\n      .then(uarray => this.setState({ robots: uarray }));\n  }\n  handleClick = (e) => {\n    this.setState({ searchText: e.target.value });\n  }\n  render() {\n    const { robots, searchText } = this.state;\n    const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchText.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Robots Rolodex</h1>\n        <SearchBox handleClick={this.handleClick} />\n        <CardList robots={filteredRobots}>\n        </CardList>\n      </div>\n    );\n  }\n\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}